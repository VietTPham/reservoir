/* HJSON configuration file for use with MacLean-1 SNN experiments
 * ---------------------------------------------------------------------------
 * This file is configured for a model trained to match a lightly-noised
 * sinusoid pattern. Its primary purpose is to serve as an example and/or
 * template for how the repository structure works.
 *
 * Some small notes about encoding Python variables in HJSON:
 * - HJSON booleans are lowercase (`true` & `false`, not `True` & `False`)
 * - Use `null` in HJSON where you want `None` in Python
 *
 * The HJSON syntax is fully defined here: https://hjson.github.io/
 */
{
    #┬───────────────────────────────────────────────────────────────────────╮
    #┤ File Saving                                                           │
    #┼ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ┤
    #┤ Configure what gets saved, where, and how. Please be mindful of other │
    #┤ researchers and their data when adjusting these settings.             │
    #┤                                                                       │
    #┤ Files are always saved along a relative (to where the model was run)  │
    #┤ filepath of the following format:                                     │
    #┤                                                                       │
    #┤     {experiment_dir}/{experiment}/{summary_dir}/                      │
    #┤     {experiment_dir}/{experiment}/{checkpoint_dir}/                   │
    #┤                                                                       │
    #┤ Experiment summaries being saved in the former, model checkpoints in  │
    #┤ the latter. The names of these directories can be customized in the   │
    #┤ settings below. By default, files will be saved to the following:     │
    #┤                                                                       │
    #┤     ../experiments/{exp_id}/summaries/                                │
    #┤     ../experiments/{exp_id}/checkpoints/                              │
    #┤                                                                       │
    #┤ To assist with data security, overwriting files and creating new      │
    #┤ directories are disallowed by default. Again, please be considerate   │
    #┤ toward your fellow scientists when enabling these features.           │
    #┴───────────────────────────────────────────────────────────────────────╯
    save:
    {
        // Your experiment's name or identifier
        exp_id: debug-demo-experiment

        // Directory storing all output from this experiment
        //
        // If not `null`, experiments will be saved in a directory of this
        // name instead of "../experiments/"
        experiment_dir: null

        // Directory storing checkpoints intended to restore models for
        // training (`.ckpt` or `.h5` files, generally)
        //
        // If not `null`, checkpoints will be saved in a directory of this
        // name instead of "{experiment_dir}/{experiment}/checkpoints/"
        checkpoint_dir: null

        // Directory storing summary data from one or more training sessions
        //
        // If not `null`, summaries will be saved in a directory of this name
        // instead of "{experiment_dir}/{experiment}/summary/"
        summary_dir: null

        // Directory storing logdirs (*only* for use with TensorBoard)
        //
        // If not `null`, logdirs will be created in a directory of this name
        // instead of "{experiment_dir}/{experiment}/logdir/""
        log_dir: null
    }

    #┬───────────────────────────────────────────────────────────────────────╮
    #┤ Universal Parameters                                                  │
    #┼ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ┤
    #┤ Values which will remain constant between layers and/or components of │
    #┤ your experiment should go here. Use standardized names where they     │
    #┤ exist, and explain what everything else is with sufficient detail.    │
    #┤                                                                       │
    #┤ Nesting models in here is a very bad idea. Nested structures should   │
    #┤ generally be fine (probably). Keep this as flat as possible though,   │
    #┤ just to be safe.                                                      │
    #┤                                                                       │
    #┤ If you would rather have these parameters as independently-declared   │
    #┤ attributes in your class(es) or have exceptions to the universality,  │
    #┤ just ignore this namespace and declare your parameters in the model   │
    #┤ namespace.                                                            │
    #┴───────────────────────────────────────────────────────────────────────╯
    uni:
    {
        // time step
        dt: 1.0

        //
        seq_len: 1000

        //
        n_recurrent: 100

        //
        rewiring: false

        // μ for normal distribution (exponentiated for lognormal weights)
        mu: -0.64

        // σ for normal distribution (exponentiated for lognormal weights)
        sigma: 0.51
    }

    #┬───────────────────────────────────────────────────────────────────────╮
    #┤ Model-Specific Parameters                                             │
    #┼ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ┤
    #┤ Model-specific parameters used to construct the network used in the   │
    #┤ experiment. These values should be a one-to-one analog with the       │
    #┤ target model's attributes (i.e. variable names and relative object    │
    #┤ structures need to align between the two).                            │
    #┴───────────────────────────────────────────────────────────────────────╯
    model:
    {
        target_rate: 0.02

        rate_cost: 0.1

        #┬───────────────────────────────────────────────────────────────────╮
        #┤ Sub-Network & Layer Parameters                                    │
        #┴───────────────────────────────────────────────────────────────────╯
        cell:
        // currently configured for an LIF neuron:
        {
            // tag `uni` wherever models need access to universal parameters
            uni: null

            units: 100   // number of units in the layer

            thr: -50.4   // threshold [mV]
            EL: -70.6    // [mV]
            n_refrac: 1  // number of refractory ms
            tau: 20.0    //

            dampening_factor: 0.3

            p: 0.2  // connectivity probability when using LIF or Adex model

            // it's fine to omit class' parameters which have default values
        }
    }

    #┬───────────────────────────────────────────────────────────────────────╮
    #┤ Data Config                                                           │
    #┼ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ┤
    #┤                                                                       │
    #┴───────────────────────────────────────────────────────────────────────╯
    data:
    {
        //
        seq_len: 1000

        //
        n_input: 10
    }

    #┬───────────────────────────────────────────────────────────────────────╮
    #┤ Logging Config                                                        │
    #┼ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ┤
    #┤                  TODO: better docs | also this is NOT for consol-log  │
    #┴───────────────────────────────────────────────────────────────────────╯
    log:
    {
        /* ... */
    }

    #┬───────────────────────────────────────────────────────────────────────╮
    #┤ Training Config                                                       │
    #┼ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ┤
    #┤ Epochs, batches, and such; TODO: better docs                          │
    #┴───────────────────────────────────────────────────────────────────────╯
    train:
    {
        learning_rate: 0.1

        // number of trials in batch
        batch_size: 20

        // number of batches in epoch
        n_batch: 15

        // number of epochs the model is fit over
        n_epochs: 2
    }
}
